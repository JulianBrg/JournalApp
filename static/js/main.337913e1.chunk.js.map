{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUploading.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sider.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoutes.js","routers/PublicRoutes.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","code","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","message","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sider","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDelete","NothingSelected","JournalScreen","PrivateRoutes","isAuthenticated","Component","rest","props","PublicRoutes","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.337913e1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firebase-firestore';\r\nimport 'firebase/firebase-auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDbRqGLmdWqq2GtqGfUPBvC3HUF1SGsYyg\",\r\n    authDomain: \"react-app-curso-363c3.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-curso-363c3.firebaseio.com\",\r\n    projectId: \"react-app-curso-363c3\",\r\n    storageBucket: \"react-app-curso-363c3.appspot.com\",\r\n    messagingSenderId: \"329839401304\",\r\n    appId: \"1:329839401304:web:5f45cb1494d925f179ad2d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = ( err ) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return {\r\n        type: types.uiRemoveError\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return {\r\n        type: types.uiStartLoading,\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return {\r\n        type: types.uiFinishLoading,\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\nexport const loadNotes = async (uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","\r\n\r\nexport const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dn4irpger/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUploading\";\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) =>({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        //borrar el atrib url si no tiene datos\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Guardado', note.title, 'success');\r\n    }\r\n}\r\n\r\n//actualiza las notas deñ store unicamente lo que cambia\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            //asegurar que la nota tenga el id\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\n//accion para subir la imagen a la plataforma cloudstore\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Subiendo...',\r\n            text: 'Espere....',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\n\r\nexport const startDelete = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n})\r\n\r\n//Limpiar las tareas con el logout\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n})","import Swal from 'sweetalert2'\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\r\nimport { types } from \"../types/types\"\r\nimport { startLoading, finishLoading } from './ui'\r\nimport { noteLogout } from './notes'\r\n\r\n\r\n//ACCION ASYNCRONA\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n\r\n                dispatch(finishLoading());\r\n\r\n            }).catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n\r\n                if(e.code === 'auth/user-not-found'){\r\n                    Swal.fire(\r\n                        'Error',\r\n                        'Correo incorrecto o usuario no registrado',\r\n                        'error'\r\n                    )\r\n                } else if (e.code === 'auth/wrong-password'){\r\n                    Swal.fire(\r\n                        'Ups!!',\r\n                        'La contraseña no es válida o el usuario no tiene contraseña',\r\n                        'error'\r\n                    )\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name })\r\n\r\n                console.log(user);\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n\r\n            }).catch(e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error')\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        //Regresa una promesa\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            }).catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout \r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    //Hook de redux para mandar los datos a las actions\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        // email: 'julian@gmail.com',\r\n        // password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        //e EVITAR QUE EL FORMULARIO RECARGE EL NAVEGADOR CON EL SUBMIT\r\n        e.preventDefault();\r\n\r\n        // dispatch(login(12345, 'Julian'));\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handelGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin} \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Entrar\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Iniciar con una red social</p>\r\n                    <div className=\"google-btn\" onClick={handelGoogleLogin}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Iniciar con google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Crear una cuenta\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    //Hook de redux para mandar los datos a las actions\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        // name: 'Julian',\r\n        // email: 'julian@gmail.com',\r\n        // password: '123456',\r\n        // password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n\r\n        } else if (!validator.isEmail(email)) {\r\n\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n\r\n        } else if (password !== password2 || password.length < 5) {\r\n\r\n            dispatch(setError('Password should be at leats 6 characters and match each other'));\r\n            return false;\r\n\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Correo\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirar contraseña\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5 mt-1\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already registered? Login\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n\r\n                    <Route exact path=\"JournalApp/auth/login\" component={LoginScreen} />\r\n                    <Route exact path=\"JournalApp/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"JournalApp/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(\r\n            id,\r\n            {date, title, body, url}\r\n        ));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entry animate__animated animate__bounceInUp animate__faster\" \r\n            onClick={handleEntryClick}>\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-datebox\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sider = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    //el useSselector sirve para tener informacion del state de Redux\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNewEntry = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__siderbar\">\r\n            <div className=\"journal__siderbar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={handleLogout}>\r\n                    Salir\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\" onClick={handleAddNewEntry}>\r\n                <i className=\"far fa-calendar-plus fa-4x\"></i>\r\n                <p className=\"mt-1\">\r\n                    Nueva entrada\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if( file ) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto del 2020</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick={handlePictureUpload}>\r\n                    Subir Imagen\r\n                </button>\r\n\r\n                <button className=\"btn\" onClick={handleSave}>\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDelete } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [values, handleInputChange, reset] = useForm(note);\r\n    const { body, title, id } = values;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(values.id, {...values}))\r\n    }, [values, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDelete(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Un título asombroso\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea\r\n                    placeholder=\"Que paso hoy\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"react-img\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Borrar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sider } from './Sider'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <Sider />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"JournalApp/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"JournalApp/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect, } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { firebase } from '../firebase/firebase-config'\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoutes } from './PrivateRoutes';\r\nimport { PublicRoutes } from './PublicRoutes';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    //ESTE EFECTO EVALUA QUE EL USUARIO ESTE EN FIREBASE Y AL RECARGAR EL NAVEGADOR CARGE LOS DATOS\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        })\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        //TODO: Cambiar diseño por uno mas bonito\r\n        return (\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoutes\r\n                        path=\"JournalApp/auth\"\r\n                        isAuthenticated={isLoggedIn}\r\n                        component={AuthRouter}\r\n                    />\r\n\r\n                    <PrivateRoutes\r\n                        exact\r\n                        path=\"JournalApp/\"\r\n                        isAuthenticated={isLoggedIn}\r\n                        component={JournalScreen}\r\n                    />\r\n\r\n                    <Redirect to=\"JournalApp/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes:[ action.payload, ...state.notes]\r\n            }\r\n            \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                //regresa las notas menos la que se borro\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n\r\n//La siguiente linea se obtiene de la extencion de redux devtools\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n//REDUCER DE AUTENTICACIÓN\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}